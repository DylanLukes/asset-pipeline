// Generated by CoffeeScript 1.6.2
(function() {
  var MakePath, Path, Pipeline, asset_pipeline_factory, fs, load_plugins, mappings;

  fs = require('fs');

  Path = require('./path');

  Pipeline = require('./pipeline');

  MakePath = require('./makepath');

  mappings = {};

  module.exports = asset_pipeline_factory = function(config) {
    var pipeline, result;

    if (config == null) {
      config = {};
    }
    pipeline = new Pipeline(config, mappings);
    result = pipeline.middleware();
    result.inlines = pipeline.inlines;
    result.get_file = function() {
      return pipeline.get_file.apply(pipeline, arguments);
    };
    return result;
  };

  load_plugins = function() {
    var err, ext, filename, name, plugin, te, _i, _j, _k, _len, _len1, _len2, _name, _ref, _ref1, _ref2, _ref3;

    mappings = {};
    _ref = fs.readdirSync(__dirname + '/plugins');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      filename = _ref[_i];
      name = Path.basename(filename, Path.extname(filename));
      try {
        plugin = require('./plugins/' + filename);
        if (plugin.compile) {
          if (typeof plugin.source === 'string') {
            plugin.source = [plugin.source];
          }
          if (typeof plugin.target === 'string') {
            plugin.target = [plugin.target];
          }
          if (plugin.source) {
            _ref1 = plugin.source;
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              ext = _ref1[_j];
              if ((_ref2 = mappings[_name = '.' + ext]) == null) {
                mappings[_name] = {
                  '': plugin
                };
              }
              if (plugin.target != null) {
                _ref3 = plugin.target;
                for (_k = 0, _len2 = _ref3.length; _k < _len2; _k++) {
                  te = _ref3[_k];
                  mappings['.' + ext]['.' + te.replace(/^\./g, '')] = plugin;
                }
              }
            }
          }
        }
      } catch (_error) {
        err = _error;
      }
    }
    return MakePath.setmappings(mappings);
  };

  load_plugins();

}).call(this);
